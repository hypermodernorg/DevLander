@model IEnumerable<BL.Puzzle>

@{
    ViewData["Title"] = "Solved Puzzles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {

    // function to convert letters to numbers
    // change bool to false to prevent conversion for testing purposes.
    // May later convert this to an admin uer option.

    public string ConvertToLetter(string aNumber, string letters)
    {
        bool change = true;
        string changed = "";

        if (change == true)
        {

            for (int i = 0; i < aNumber.Length; i++)
            {

                changed += letters[Int32.Parse(aNumber.Substring(i, 1))].ToString();


            }





        }

        return changed;
    }


}




<div class="row bg-color1" style="padding-top: 200px;">
    <div class="col">
        <div class="container-xxl">

            <div class="row">
                <div class="col text-center">
                    <h1 class="text-uppercase">@ViewData["Title"]</h1>
                    <hr class="bg-color3 mx-auto w-25 border border-color3 border-3" />
                </div>
            </div>


            <div class="row">

                <div class="col">


                    @{

                        if ((bool)ViewData["Administrator"])
                        {
                            <p>
                                <a asp-action="Create">Create New</a>
                            </p>
                        }

                    }

                    @{

                        if ((bool)ViewData["Administrator"])
                        {
                            <p>
                                <a asp-action="Create2">Create ++</a>
                            </p>
                        }

                    }

                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Divisor)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Quotient)
                                </th>
                                <th>@Html.DisplayNameFor(model => model.Hint)</th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Created)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {

                            <tr>


                                <td>

                                    @ConvertToLetter(item.Divisor, item.Letters)
                                </td>
                                <td>
                                    @ConvertToLetter(item.Quotient, item.Letters)
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Hint)</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Created)
                                </td>
                                <td>
                                    @*<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |*@
                                    <a asp-action="Details" asp-route-id="@item.Id">View</a>
                                    @if ((bool)ViewData["Administrator"] == true)
                                    {
                                        <a asp-action="Delete" asp-route-id="@item.Id"> | Delete</a>
                                    }
                                </td>
                            </tr>

                         

                            }
                        </tbody>
                    </table>


                </div>

            </div>

        </div>

    </div>
</div>



